if not game:IsLoaded() then  game.Loaded:Wait() end local a = game:GetService("\80\108\97\121\101\114\115") local m = game:GetService("\82\117\110\83\101\114\118\105\99\101") local h = loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\119\97\108\108\121\45\114\98\108\120\47\117\119\117\119\97\114\101\45\117\105\47\109\97\105\110\47\109\97\105\110\46\108\117\97"))() local _ = a.LocalPlayer local i_ = _.Character or _.CharacterAdded:Wait() local pi = _:WaitForChild("\68\97\116\97") local gp = pi:WaitForChild("\81\117\101\115\116\115") local f = pi:WaitForChild("\83\116\97\110\100") local cf = h:CreateWindow("\240\159\145\145\32\75\105\110\103\32\111\102\32\72\117\98\32\240\159\145\145") local rc = cf:AddFolder("\77\97\105\110") local lr = cf:AddFolder("\67\114\101\100\105\116\115") local kl = workspace.Items local ok = workspace.Npcs local eo = workspace.Living local se = nil local ds = 0  local bd = {} local tb = {} local nt = {} local jn = { ["\66\97\100\32\71\105"] = "\49\43", ["\71\105\111\114\110\111\32\71\105\111\118\97\110\110\97"] = "\53\43", ["\83\99\97\114\121\32\77\111\110\115\116\101\114"] = "\49\48\43", ["\82\107\101\114\32\68\117\109\109\121"] = "\49\53\43", ["\68\105\111\32\79\118\101\114\32\72\101\97\118\101\110"] = "\50\53\43", ["\89\111\115\104\105\107\97\103\101\32\75\105\114\97"] = "\51\48\43", ["\65\110\103\101\108\111"] = "\52\48\43", ["\65\108\105\101\110"] = "\53\48\43", ["\74\111\116\97\114\111\32\80\97\114\116\32\52"] = "\54\53\43", ["\75\97\107\121\111\105\110"] = "\55\53\43", ["\74\117\110\103\108\101\32\66\97\110\100\105\116"] = "\57\48\43", } for _, QuestNPC in ipairs(ok:GetChildren()) do  if not QuestNPC:FindFirstChild("\72\101\97\100") then continue end local seo = QuestNPC.Head:FindFirstChild("\77\97\105\110") if not seo then continue end local dse = seo:FindFirstChildWhichIsA("\84\101\120\116\66\111\120") if not dse then continue end for MobName, NPCName in pairs(jn) do if type(NPCName) == "\117\115\101\114\100\97\116\97" then continue end if dse.Text:find(NPCName) then jn[MobName] = QuestNPC end  end  end  local hm = {"\67\97\117\108\100\114\111\110\66\108\97\99\107", "\84\97\108\107\105\110\103\66\101\110", "\71\69\82"} local _h = nil local function i(p) if _h then  _h:Cancel() _h:Destroy() _h = nil end local bds = i_:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") if not bds then return end bds.Anchored = false if _:DistanceFromCharacter(p) > 5 then local pi_ = TweenInfo.new((p - bds.Position).Magnitude/h.flags.TweenSpeed, Enum.EasingStyle.Linear) _h = game:GetService("\84\119\101\101\110\83\101\114\118\105\99\101"):Create(bds, pi_, {CFrame = CFrame.new(p)}) _h:Play() else bds.CFrame = CFrame.new(p) * CFrame.new(0, 8, 0) * CFrame.Angles(math.rad(-90),0,0) end end local function g(i_) bd = {} i_:WaitForChild("\72\101\97\100") for _, BasePart in pairs(i_:GetChildren()) do if not BasePart:IsA("\66\97\115\101\80\97\114\116") then continue end bd[#bd + 1] = BasePart end end local function c(r) if not r or not r.Parent then return end local gpi = r:FindFirstChildWhichIsA("\72\117\109\97\110\111\105\100") if not gpi or not r:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") then return end if gpi:GetState() == Enum.HumanoidStateType.Dead then return end return true end local function l() local fg = jn[h.flags.Target] if not fg then return end for _, Folder in ipairs(gp:GetChildren()) do  local cfg = Folder:FindFirstChild("\69\110\101\109\121") if cfg and cfg.Value == h.flags.Target then if Folder.Completed.Value then fg.QuestDone:FireServer() end return end  end fg.Done:FireServer()  end local function k() local rcf = i_:FindFirstChild("\83\116\97\110\100\69\118\101\110\116\115") if not rcf then return end rcf.M1:FireServer() if h.flags.StandAttack then         local lrc = i_:FindFirstChild("\83\116\97\110\100") if not lrc then return end if not i_.Aura.Value then rcf.Summon:FireServer() end if os.clock() - ds < 0.5 then return end  ds = os.clock() for _, Event in ipairs(rcf:GetChildren()) do  if Event.Name == "\66\108\111\99\107" then continue end if Event.Name == "\81\117\111\116\101" then continue end if Event.Name == "\80\111\115\101" then continue end if Event.Name == "\83\117\109\109\111\110" then continue end if Event.Name == "\84\111\103\103\108\101\80\105\108\111\116" then continue end Event:FireServer(true) end  end  end local function o(e) if not h.flags.Itemfarm then return end if not e:IsA("\84\111\111\108") then return end local klr = e:WaitForChild("\72\97\110\100\108\101", 5) repeat task.wait() i(klr.Position) if _:DistanceFromCharacter(klr.Position) > 10 then continue end i_.Humanoid:EquipTool(e) until not e or e.Parent ~= kl or e.Parent ~= workspace end local function s() if not h.flags.Itemfarm then return end for _, e in ipairs(kl:GetChildren()) do o(e) end for _, e in ipairs(workspace:GetChildren()) do o(e) end end  local function d() if h.flags.LairFarm then  local okl = eo:FindFirstChild("\66\111\115\115") if not okl then return end se = okl return  end for _, Mob in ipairs(eo:GetChildren()) do  if a:GetPlayerFromCharacter(Mob) then continue end if not c(Mob) then continue end if Mob.Name ~= h.flags.Target then continue end se = Mob return end i_.HumanoidRootPart.Anchored = false end local function b() if not h.flags.NameHide then return end i_:WaitForChild("\72\101\97\100"):WaitForChild("\72\101\97\108\116\104\71\117\105"):Destroy() end local function t() if not h.flags.LairFarm then return end for _, fg in ipairs(ok:GetChildren()) do  if not fg:FindFirstChild("\72\101\97\100") then continue end local eok = fg.Head:FindFirstChild("\83\117\98") if not eok or not eok:FindFirstChildWhichIsA("\84\101\120\116\66\111\120") or eok:FindFirstChildWhichIsA("\84\101\120\116\66\111\120").Text ~= "\76\97\105\114\32\81\117\101\115\116" then continue end local seo = fg.Head:FindFirstChild("\77\97\105\110") if not seo then continue end local dse = seo:FindFirstChildWhichIsA("\84\101\120\116\66\111\120") if not dse then continue end if string.lower(dse.Text):find(string.lower(h.flags.LairTarget.."\43")) then fg.Done:FireServer() end end end m.Heartbeat:Connect(function() if not h.flags.MobFarm then return end if not i_ then return end if not c(i_) then return end if not c(se) or se.Name ~= h.flags.Target and se.Name ~= "\66\111\115\115" then return d() end if c(se) and eo:FindFirstChild("\66\111\115\115") and se.Name ~= "\66\111\115\115" then  return d() end if h.flags.AutoQuest then l() end i_.HumanoidRootPart.CFrame =se.HumanoidRootPart.CFrame * CFrame.new(0.2, 1.3, 6.5) k() end) m.Stepped:Connect(function()  if not h.flags.Noclip then return end for i = 1, #bd do bd[i].CanCollide = false end local bds = i_:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") if not bds then return end if bds.RotVelocity.Magnitude >= 50 or bds.Velocity.Magnitude >= 50 then  bds.RotVelocity = Vector3.new() bds.Velocity = Vector3.new() end end) _.CharacterAdded:Connect(function(n) i_ = n g(n) b() t() s() end) g(i_) kl.ChildAdded:Connect(o) workspace.ChildAdded:Connect(o) local tbd; tbd = hookmetamethod(game, "\95\95\110\97\109\101\99\97\108\108", newcclosure(function(self, ...) local ntb = getnamecallmethod() if ntb == "\82\97\121\99\97\115\116" or ntb == "\75\105\99\107" or ntb == "\70\105\114\101\83\101\114\118\101\114" and tostring(self) == "\80\108\97\121\101\114\83\116\97\110\100\77\97\105\110\72\97\110\100\108\101" then return wait(9e9) end  return tbd(self, ...) end)) for _, Connection in pairs(getconnections(_.Idled)) do  Connection:Disable() end for MobName, _ in pairs(jn) do if table.find(tb, MobName) then continue end tb[#tb + 1] = MobName end for _, Mob in ipairs(eo:GetChildren()) do if a:GetPlayerFromCharacter(Mob) then continue end if table.find(tb, Mob.Name) then continue end tb[#tb + 1] = Mob.Name end for _, StandObject in ipairs(game:GetService("\82\101\112\108\105\99\97\116\101\100\83\116\111\114\97\103\101").StandNameConvert:GetChildren()) do  if table.find(nt, StandObject.Name) then continue end if table.find(hm, StandObject.Name) then continue end if string.lower(StandObject.Name):find("\111\104") or string.lower(StandObject.Name):find("\111\118\101\114\104\101\97\118\101\110")  then continue end nt[#nt + 1] = StandObject.Name end rc:AddList({text = "\77\111\98", flag = "\84\97\114\103\101\116", values = tb}) rc:AddList({text = "\76\97\105\114\115", flag = "\76\97\105\114\84\97\114\103\101\116", values = {"\76\118\108\46\32\49\53", "\76\118\108\46\32\52\48", "\76\118\108\46\32\56\48", "\76\118\108\46\32\49\48\48"}}) rc:AddList({text = "\83\116\97\110\100\32\70\97\114\109", flag = "\84\97\114\103\101\116\83\116\97\110\100", values = nt}) rc:AddList({text = "\65\114\114\111\119\32\83\101\108\101\99\116\111\114\91\83\116\97\110\100\32\70\97\114\109\93", flag = "\65\114\114\111\119", values = {"\83\116\97\110\100\32\65\114\114\111\119", "\67\104\97\114\103\101\100\32\65\114\114\111\119"}}) rc:AddSlider({text = "\84\119\101\101\110\32\83\112\101\101\100", flag = "\84\119\101\101\110\83\112\101\101\100", min = 50, max = 100}) rc:AddToggle({text = "\65\117\116\111\32\70\97\114\109\32\40\77\111\98\41", flag = "\77\111\98\70\97\114\109", callback = function(j) if _h then  _h:Cancel() _h:Destroy() _h = nil end i_.HumanoidRootPart.Anchored = false end}) rc:AddToggle({text = "\76\97\105\114\32\70\97\114\109", flag = "\76\97\105\114\70\97\114\109", callback = t})  rc:AddToggle({text = "\73\116\101\109\32\70\97\114\109", flag = "\73\116\101\109\102\97\114\109", callback = s}) rc:AddToggle({text = "\83\116\97\110\100\32\70\97\114\109", flag = "\83\116\97\110\100\70\97\114\109", callback = function() while h.flags.StandFarm and f.Value ~= h.flags.TargetStand and task.wait(0.2) do local jnt = _.Backpack:FindFirstChild(h.flags.Arrow) or i_:FindFirstChild(h.flags.Arrow) local aj = _.Backpack:FindFirstChild("\82\111\107\97\107\97\107\97") or i_:FindFirstChild("\82\111\107\97\107\97\107\97") if not jnt or not aj then continue end if f.Value == "\78\111\110\101" then  repeat jnt.Parent = i_ task.wait(0.3) jnt.Use:FireServer() until f.Value ~= "\78\111\110\101" or not h.flags.StandFarm else repeat  aj.Parent = i_ task.wait(0.3) aj.Use:FireServer() until f.Value == "\78\111\110\101" or not h.flags.StandFarm end  end  end}) rc:AddToggle({text = "\65\117\116\111\32\81\117\101\115\116", flag = "\65\117\116\111\81\117\101\115\116"}) rc:AddToggle({text = "\65\117\116\111\32\83\116\97\110\100\32\83\107\105\108\108\115", flag = "\83\116\97\110\100\65\116\116\97\99\107"}) rc:AddToggle({text = "\78\111\32\67\108\105\112", flag = "\78\111\99\108\105\112"}) lr:AddLabel({text = "\83\99\114\105\112\116\58\32\240\157\149\173\240\157\150\138\240\157\150\152\240\157\150\153\32\240\157\149\182\240\157\150\142\240\157\150\147\240\157\150\140\226\157\166\35\51\55\51\54"}) lr:AddLabel({text = "\85\73\32\76\105\98\114\97\114\121\58\32\124\72\97\99\107\101\114\124\35\55\51\51\49"}) h:Init()
