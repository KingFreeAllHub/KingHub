--Discord :https://discord.gg/5EcPF5efVZ
if not game:IsLoaded() then  game.Loaded:Wait() end local m = game:GetService("\80\108\97\121\101\114\115") local g = game:GetService("\82\117\110\83\101\114\118\105\99\101") local _ = game:GetService("\82\101\112\108\105\99\97\116\101\100\83\116\111\114\97\103\101") local d_ = loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\75\105\110\103\70\114\101\101\65\108\108\72\117\98\47\75\105\110\103\72\117\98\47\109\97\105\110\47\85\73"))() local kd = loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\81\117\101\110\116\121\47\78\101\118\101\114\109\111\114\101\69\110\103\105\110\101\47\118\101\114\115\105\111\110\50\47\77\111\100\117\108\101\115\47\83\104\97\114\101\100\47\69\118\101\110\116\115\47\77\97\105\100\46\108\117\97"))() local tk = m.LocalPlayer local hcef = tk.Character or tk.CharacterAdded:Wait() local fr = tk:WaitForChild("\68\97\116\97") local ef = fr:WaitForChild("\81\117\101\115\116\115") local ce = fr:WaitForChild("\83\116\97\110\100") local hc = fr:WaitForChild("\65\116\116\114\105") local jh = d_:CreateWindow("\240\159\145\145\32\75\105\110\103\32\111\102\32\72\117\98\32\240\159\145\145") local oj = jh:AddFolder("\77\97\105\110") local qo = jh:AddFolder("\68\117\110\103\101\111\110") local aq = jh:AddFolder("\65\117\116\111\32\83\116\97\110\100") local sa = jh:AddFolder("\83\104\111\112") local bs = jh:AddFolder("\73\116\101\109") local ib = jh:AddFolder("\67\114\101\100\105\116\115") local li = workspace.Items local nl = workspace.Fartinglloll local mn = workspace.Living local gm = nil local _g = 0  local d_g = kd.new() local kd_ = {"\100\116\119", "\106\111\116\97\114\111\115\115\116\97\114\112\108\97\116\105\110\117\109", "\112\109"} local tkd = {"\103\111\100\108\121", "\108\101\103\101\110\100\97\114\121", "\105\110\118\105\110\99\105\98\108\101", "\100\97\101\109\111\110"} local r = {} local frt = {"\66\97\100\32\71\105", "\74\111\116\97\114\111\32\79\118\101\114\32\72\101\97\118\101\110"} local efr = {} local qoj = {"\67\97\117\108\100\114\111\110\66\108\97\99\107", "\84\97\108\107\105\110\103\66\101\110", "\71\69\82"} local hce = { ["\66\97\100\32\71\105"] = "\49\43", ["\71\105\111\114\110\111\32\71\105\111\118\97\110\110\97"] = "\53\43", ["\83\99\97\114\121\32\77\111\110\115\116\101\114"] = "\49\48\43", ["\82\107\101\114\32\68\117\109\109\121"] = "\49\53\43", ["\68\105\111\32\79\118\101\114\32\72\101\97\118\101\110"] = "\50\53\43", ["\89\111\115\104\105\107\97\103\101\32\75\105\114\97"] = "\51\48\43", ["\65\110\103\101\108\111"] = "\52\48\43", ["\65\108\105\101\110"] = "\53\48\43", ["\74\111\116\97\114\111\32\80\97\114\116\32\52"] = "\54\53\43", ["\75\97\107\121\111\105\110"] = "\55\53\43", ["\74\117\110\103\108\101\32\66\97\110\100\105\116"] = "\57\48\43", } for _, Questratio in ipairs(nl:GetChildren()) do  if not Questratio:FindFirstChild("\72\101\97\100") then continue end local tkd_ = Questratio.Head:FindFirstChild("\77\97\105\110") if not tkd_ then continue end local rtk = tkd_:FindFirstChildWhichIsA("\84\101\120\116\66\111\120") if not rtk then continue end for MobName, ratioName in pairs(hce) do if type(ratioName) == "\117\115\101\114\100\97\116\97" then continue end if rtk.Text:find(ratioName) then hce[MobName] = Questratio end  end  end  local qoj = {"\67\97\117\108\100\114\111\110\66\108\97\99\107", "\84\97\108\107\105\110\103\66\101\110", "\71\69\82"} local aqo = nil local function d(k) if aqo then  aqo:Cancel() aqo:Destroy() aqo = nil end local frtk = hcef:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") if not frtk then return end frtk.Anchored = false if tk:DistanceFromCharacter(k) > 5 then local bsa = TweenInfo.new((k - frtk.Position).Magnitude/d_.flags.TweenSpeed, Enum.EasingStyle.Linear) aqo = game:GetService("\84\119\101\101\110\83\101\114\118\105\99\101"):Create(frtk, bsa, {CFrame = CFrame.new(k)}) aqo:Play() else frtk.CFrame = CFrame.new(k) * CFrame.new(0, 8, 0) * CFrame.Angles(math.rad(-90),0,0) end end local function t(hcef) r = {} hcef:WaitForChild("\72\101\97\100") for _, BasePart in pairs(hcef:GetChildren()) do if not BasePart:IsA("\66\97\115\101\80\97\114\116") then continue end r[#r + 1] = BasePart end end local function f(e) if not e or not e.Parent then return end local ibs = e:FindFirstChildWhichIsA("\72\117\109\97\110\111\105\100") if not ibs or not e:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") then return end if ibs:GetState() == Enum.HumanoidStateType.Dead then return end return true end local function c() local lib = hce[d_.flags.Target] if not lib then return end for _, Folder in ipairs(ef:GetChildren()) do  local nli = Folder:FindFirstChild("\69\110\101\109\121") if nli and nli.Value == d_.flags.Target then if Folder.Completed.Value then lib.QuestDone:FireServer() end return end  end lib.Done:FireServer()  end local function h() local mnl = hcef:FindFirstChild("\83\116\97\110\100\69\118\101\110\116\115") if not mnl then return end mnl.M1:FireServer() if d_.flags.StandAttack then         local ojh = hcef:FindFirstChild("\83\116\97\110\100") if not ojh then return end if not hcef.Aura.Value then mnl.Summon:FireServer() end if os.clock() - _g < 0.5 then return end  _g = os.clock() for _, Event in ipairs(mnl:GetChildren()) do  if Event.Name == "\66\108\111\99\107" then continue end if Event.Name == "\81\117\111\116\101" then continue end if Event.Name == "\80\111\115\101" then continue end if Event.Name == "\83\117\109\109\111\110" then continue end if Event.Name == "\84\111\103\103\108\101\80\105\108\111\116" then continue end Event:FireServer(true) end  end  end local function j(ibsa) if not d_.flags.Itemfarm then return end if not ibsa:IsA("\84\111\111\108") then return end local _gm = ibsa:WaitForChild("\72\97\110\100\108\101", 5) repeat task.wait() d(_gm.Position) if tk:DistanceFromCharacter(_gm.Position) > 10 then continue end hcef.Humanoid:EquipTool(ibsa) until not ibsa or ibsa.Parent ~= li or ibsa.Parent ~= workspace end local function q() if not d_.flags.Itemfarm then return end for _, ibsa in ipairs(li:GetChildren()) do j(ibsa) end for _, ibsa in ipairs(workspace:GetChildren()) do j(ibsa) end end  local function a() if d_.flags.LairFarm then  local d_gm = mn:FindFirstChild("\66\111\115\115") if not d_gm then return end gm = d_gm return  end for _, Mob in ipairs(mn:GetChildren()) do  if m:GetPlayerFromCharacter(Mob) then continue end if not f(Mob) then continue end if Mob.Name ~= d_.flags.Target then continue end gm = Mob return end hcef.HumanoidRootPart.Anchored = false end local function s() if not d_.flags.NameHide then return end hcef:WaitForChild("\72\101\97\100"):WaitForChild("\72\101\97\108\116\104\71\117\105"):Destroy() end local function b() if not d_.flags.LairFarm then return end for _, lib in ipairs(nl:GetChildren()) do  if not lib:FindFirstChild("\72\101\97\100") then continue end local kd_g = lib.Head:FindFirstChild("\83\117\98") if not kd_g or not kd_g:FindFirstChildWhichIsA("\84\101\120\116\66\111\120") or kd_g:FindFirstChildWhichIsA("\84\101\120\116\66\111\120").Text ~= "\76\97\105\114\32\81\117\101\115\116" then continue end local tkd_ = lib.Head:FindFirstChild("\77\97\105\110") if not tkd_ then continue end local rtk = tkd_:FindFirstChildWhichIsA("\84\101\120\116\66\111\120") if not rtk then continue end if string.lower(rtk.Text):find(string.lower(d_.flags.LairTarget.."\43")) then lib.Done:FireServer() end end end g.Heartbeat:Connect(function() if not d_.flags.MobFarm then return end if not hcef then return end if not f(hcef) then return end if not f(gm) or gm.Name ~= d_.flags.Target and gm.Name ~= "\66\111\115\115" then return a() end if f(gm) and mn:FindFirstChild("\66\111\115\115") and gm.Name ~= "\66\111\115\115" then  return a() end if d_.flags.AutoQuest then c() end hcef.HumanoidRootPart.CFrame =gm.HumanoidRootPart.CFrame * CFrame.new(0.2, 1.3, 6.8) h() end) g.Stepped:Connect(function()  if not d_.flags.Noclip then return end for i = 1, #r do r[i].CanCollide = false end local frtk = hcef:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") if not frtk then return end if frtk.RotVelocity.Magnitude >= 50 or frtk.Velocity.Magnitude >= 50 then  frtk.RotVelocity = Vector3.new() frtk.Velocity = Vector3.new() end end) tk.CharacterAdded:Connect(function(i) hcef = i t(i) s() b() q() end) t(hcef) li.ChildAdded:Connect(j) workspace.ChildAdded:Connect(j) local efrt; efrt = hookmetamethod(game, "\95\95\110\97\109\101\99\97\108\108", newcclosure(function(self, ...) local cef = getnamecallmethod() if cef == "\82\97\121\99\97\115\116" or cef == "\75\105\99\107" or cef == "\70\105\114\101\83\101\114\118\101\114" and tostring(self) == "\80\108\97\121\101\114\83\116\97\110\100\77\97\105\110\72\97\110\100\108\101" then return wait(9e9) end  return efrt(self, ...) end)) for _, Connection in pairs(getconnections(tk.Idled)) do  Connection:Disable() end for MobName, _ in pairs(hce) do if table.find(frt, MobName) then continue end frt[#frt + 1] = MobName end for _, Mob in ipairs(mn:GetChildren()) do if m:GetPlayerFromCharacter(Mob) then continue end if table.find(frt, Mob.Name) then continue end frt[#frt + 1] = Mob.Name end for _, StandObject in ipairs(_.StandNameConvert:GetChildren()) do  if table.find(efr, StandObject.Name) then continue end if table.find(qoj, StandObject.Name) then continue end if string.lower(StandObject.Name):find("\111\104") or string.lower(StandObject.Name):find("\111\118\101\114\104\101\97\118\101\110")  then continue end efr[#efr + 1] = StandObject.Name end oj:AddList({text = "\77\111\98", flag = "\84\97\114\103\101\116", values = frt}) qo:AddList({text = "\68\117\110\103\101\111\110", flag = "\76\97\105\114\84\97\114\103\101\116", values = {"\76\118\108\46\32\49\53", "\76\118\108\46\32\52\48", "\76\118\108\46\32\56\48", "\76\118\108\46\32\49\48\48"}}) oj:AddSlider({text = "\84\119\101\101\110\32\83\112\101\101\100", flag = "\84\119\101\101\110\83\112\101\101\100", min = 50, max = 100}) oj:AddToggle({text = "\65\117\116\111\32\70\97\114\109\32\40\77\111\98\41", flag = "\77\111\98\70\97\114\109", callback = function(l) if aqo then  aqo:Cancel() aqo:Destroy() aqo = nil end hcef.HumanoidRootPart.Anchored = false end}) qo:AddToggle({text = "\74\111\105\110\101\114\32\68\117\110\103\101\111\110", flag = "\76\97\105\114\70\97\114\109", callback = b})  oj:AddToggle({text = "\65\117\116\111\32\81\117\101\115\116", flag = "\65\117\116\111\81\117\101\115\116"}) oj:AddToggle({text = "\65\117\116\111\32\83\116\97\110\100\32\83\107\105\108\108\115", flag = "\83\116\97\110\100\65\116\116\97\99\107"}) oj:AddToggle({text = "\78\111\32\67\108\105\112", flag = "\78\111\99\108\105\112"}) aq:AddLabel({text = "\65\114\114\111\119\32\83\101\108\101\99\116\105\111\110"}) aq:AddList({text = "\65\114\114\111\119\32\83\101\108\101\99\116\111\114", flag = "\65\114\114\111\119", values = {"\83\116\97\110\100\32\65\114\114\111\119", "\67\104\97\114\103\101\100\32\65\114\114\111\119"}}) aq:AddLabel({text = "\83\116\97\110\100\32\83\101\108\101\99\116\105\111\110"}) aq:AddList({text = "\83\116\97\110\100\32\83\101\108\101\99\116\111\114\49", flag = "\84\97\114\103\101\116\83\116\97\110\100\49", values = efr}) aq:AddList({text = "\83\116\97\110\100\32\83\101\108\101\99\116\111\114\50", flag = "\84\97\114\103\101\116\83\116\97\110\100\50", values = efr}) aq:AddList({text = "\83\116\97\110\100\32\83\101\108\101\99\116\111\114\51", flag = "\84\97\114\103\101\116\83\116\97\110\100\51", values = efr}) aq:AddList({text = "\83\116\97\110\100\32\83\101\108\101\99\116\111\114\52", flag = "\84\97\114\103\101\116\83\116\97\110\100\52", values = efr}) aq:AddList({text = "\83\116\97\110\100\32\83\101\108\101\99\116\111\114\53", flag = "\84\97\114\103\101\116\83\116\97\110\100\53", values = efr}) aq:AddLabel({text = "\65\116\116\114\105\98\117\116\101\32\83\101\108\101\99\116\105\111\110"}) aq:AddList({text = "\65\116\116\114\105\98\117\116\101\32\83\101\108\101\99\116\111\114\49", flag = "\84\97\114\103\101\116\65\116\116\114\105\98\117\116\101\49", values = tkd}) aq:AddList({text = "\65\116\116\114\105\98\117\116\101\32\83\101\108\101\99\116\111\114\50", flag = "\84\97\114\103\101\116\65\116\116\114\105\98\117\116\101\50", values = tkd}) aq:AddList({text = "\65\116\116\114\105\98\117\116\101\32\83\101\108\101\99\116\111\114\51", flag = "\84\97\114\103\101\116\65\116\116\114\105\98\117\116\101\51", values = tkd}) aq:AddList({text = "\65\116\116\114\105\98\117\116\101\32\83\101\108\101\99\116\111\114\52", flag = "\84\97\114\103\101\116\65\116\116\114\105\98\117\116\101\52", values = tkd}) aq:AddList({text = "\65\116\116\114\105\98\117\116\101\32\83\101\108\101\99\116\111\114\53", flag = "\84\97\114\103\101\116\65\116\116\114\105\98\117\116\101\53", values = tkd}) aq:AddToggle({text = "\83\116\97\110\100\32\70\97\114\109", flag = "\83\116\97\110\100\70\97\114\109", callback = function() local hcef = tk.Character while f(hcef) and d_.flags.StandFarm do task.wait(0.2) local jhc = d_.flags local ojh = string.lower(ce.Value) local qojh = string.lower(hc.Value) local aqoj = false for Index = 1, 4 do if ojh == string.lower(jhc["\84\97\114\103\101\116\83\116\97\110\100"..Index]) or qojh == string.lower(jhc["\84\97\114\103\101\116\65\116\116\114\105\98\117\116\101"..Index]) then  aqoj = true break end  end local saq = tk.Backpack:FindFirstChild(jhc.Arrow) or hcef:FindFirstChild(jhc.Arrow) local bsaq = tk.Backpack:FindFirstChild("\82\111\107\97\107\97\107\97") or hcef:FindFirstChild("\82\111\107\97\107\97\107\97") if not saq or not bsaq then continue end if ce.Value == "\78\111\110\101" then  repeat saq.Parent = hcef task.wait(0.3) saq.Use:FireServer() until ce.Value ~= "\78\111\110\101" or not d_.flags.StandFarm or not f(hcef) else repeat  bsaq.Parent = hcef task.wait(0.3) bsaq.Use:FireServer() until ce.Value == "\78\111\110\101" or not d_.flags.StandFarm or not f(hcef) end  end  end}) for Index, ItemName in ipairs({"\53\120\32\82\111\107\97\32\36\49\50\53\48\48", "\49\120\32\82\111\107\97\32\36\50\53\48\48", "\53\120\32\65\114\114\111\119\32\36\49\55\53\48\48", "\36\51\53\48\48\32\49\120\32\65\114\114\111\119"}) do sa:AddButton({text = ItemName, callback = function() _.Events.BuyItem:FireServer("\77\101\114\99\104\97\110\116\65\85", "\79\112\116\105\111\110"..tostring(Index)) end}) end bs:AddLabel({text = "\70\97\114\109"}) bs:AddToggle({text = "\73\116\101\109\32\70\97\114\109", flag = "\73\116\101\109\102\97\114\109", callback = q}) bs:AddLabel({text = "\73\116\101\109\32\68\114\111\112"}) bs:AddBox({text = "\68\114\111\112\32\65\109\111\117\110\116", callback = function(n) n = tonumber(n) if not n then return end if n <= 0 then return end for _ = 1, n do local ibsa = tk.Backpack:FindFirstChildWhichIsA("\84\111\111\108") or tk.Character:FindFirstChildWhichIsA("\84\111\111\108") if not ibsa then break end ibsa.Parent = tk.Character task.wait(0.2) require(game.Players.LocalPlayer.PlayerScripts.ChatScript.ChatMain).MessagePosted:fire("\47\100\114\111\112\105\116\101\109") end end}) aq:AddLabel({text = "\83\116\97\110\100\32\83\116\111\114\97\103\101"}) for Index = 1, 3 do  aq:AddButton({text = "\83\116\111\114\97\103\101"..Index, callback = function() _.Events.SwitchStand:FireServer("\83\108\111\116"..Index) end}) end jh:AddBind({text = "\85\73\32\84\111\103\103\108\101", key = Enum.KeyCode.RightControl, callback = function() d_:Close() end}) ib:AddLabel({text = "\83\99\114\105\112\116\58\32\75\105\110\103\32\111\102\32\72\117\98"}) d_:Init()
