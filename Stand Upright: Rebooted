if not game:IsLoaded() then  game.Loaded:Wait() end local b = game:GetService("\80\108\97\121\101\114\115") local t = game:GetService("\82\117\110\83\101\114\118\105\99\101") local _ = loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\114\97\119\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\119\97\108\108\121\45\114\98\108\120\47\117\119\117\119\97\114\101\45\117\105\47\109\97\105\110\47\109\97\105\110\46\108\117\97"))() local c_ = b.LocalPlayer local mc = c_.Character or c_.CharacterAdded:Wait() local am = c_:WaitForChild("\68\97\116\97") local d = am:WaitForChild("\81\117\101\115\116\115") local qd = am:WaitForChild("\83\116\97\110\100") local sq = _:CreateWindow("\240\159\145\145\32\75\105\110\103\32\111\102\32\72\117\98\32\240\159\145\145") local ls = sq:AddFolder("\77\97\105\110") local il = sq:AddFolder("\68\117\110\103\101\111\110") local ki = sq:AddFolder("\65\117\116\111\32\83\116\97\110\100") local ok = sq:AddFolder("\67\114\101\100\105\116\115") local ro = workspace.Items local gr = workspace.Npcs local ng = workspace.Living local hn = nil local fh = 0  local p = {} local jp = {} local bj = {} local tb = { ["\66\97\100\32\71\105"] = "\49\43", ["\71\105\111\114\110\111\32\71\105\111\118\97\110\110\97"] = "\53\43", ["\83\99\97\114\121\32\77\111\110\115\116\101\114"] = "\49\48\43", ["\82\107\101\114\32\68\117\109\109\121"] = "\49\53\43", ["\68\105\111\32\79\118\101\114\32\72\101\97\118\101\110"] = "\50\53\43", ["\89\111\115\104\105\107\97\103\101\32\75\105\114\97"] = "\51\48\43", ["\65\110\103\101\108\111"] = "\52\48\43", ["\65\108\105\101\110"] = "\53\48\43", ["\74\111\116\97\114\111\32\80\97\114\116\32\52"] = "\54\53\43", ["\75\97\107\121\111\105\110"] = "\55\53\43", ["\74\117\110\103\108\101\32\66\97\110\100\105\116"] = "\57\48\43", } for _, QuestNPC in ipairs(gr:GetChildren()) do  if not QuestNPC:FindFirstChild("\72\101\97\100") then continue end local hng = QuestNPC.Head:FindFirstChild("\77\97\105\110") if not hng then continue end local fhn = hng:FindFirstChildWhichIsA("\84\101\120\116\66\111\120") if not fhn then continue end for MobName, NPCName in pairs(tb) do if type(NPCName) == "\117\115\101\114\100\97\116\97" then continue end if fhn.Text:find(NPCName) then tb[MobName] = QuestNPC end  end  end  local mc_ = {"\67\97\117\108\100\114\111\110\66\108\97\99\107", "\84\97\108\107\105\110\103\66\101\110", "\71\69\82"} local amc = nil local function c(m) if amc then  amc:Cancel() amc:Destroy() amc = nil end local pf = mc:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") if not pf then return end pf.Anchored = false if c_:DistanceFromCharacter(m) > 5 then local qda = TweenInfo.new((m - pf.Position).Magnitude/_.flags.TweenSpeed, Enum.EasingStyle.Linear) amc = game:GetService("\84\119\101\101\110\83\101\114\118\105\99\101"):Create(pf, qda, {CFrame = CFrame.new(m)}) amc:Play() else pf.CFrame = CFrame.new(m) * CFrame.new(0, 8, 0) * CFrame.Angles(math.rad(-90),0,0) end end local function a(mc) p = {} mc:WaitForChild("\72\101\97\100") for _, BasePart in pairs(mc:GetChildren()) do if not BasePart:IsA("\66\97\115\101\80\97\114\116") then continue end p[#p + 1] = BasePart end end local function q(s) if not s or not s.Parent then return end local sqd = s:FindFirstChildWhichIsA("\72\117\109\97\110\111\105\100") if not sqd or not s:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") then return end if sqd:GetState() == Enum.HumanoidStateType.Dead then return end return true end local function l() local lsq = tb[_.flags.Target] if not lsq then return end for _, Folder in ipairs(d:GetChildren()) do  local ils = Folder:FindFirstChild("\69\110\101\109\121") if ils and ils.Value == _.flags.Target then if Folder.Completed.Value then lsq.QuestDone:FireServer() end return end  end lsq.Done:FireServer()  end local function i() local kil = mc:FindFirstChild("\83\116\97\110\100\69\118\101\110\116\115") if not kil then return end kil.M1:FireServer() if _.flags.StandAttack then         local oki = mc:FindFirstChild("\83\116\97\110\100") if not oki then return end if not mc.Aura.Value then kil.Summon:FireServer() end if os.clock() - fh < 0.5 then return end  fh = os.clock() for _, Event in ipairs(kil:GetChildren()) do  if Event.Name == "\66\108\111\99\107" then continue end if Event.Name == "\81\117\111\116\101" then continue end if Event.Name == "\80\111\115\101" then continue end if Event.Name == "\83\117\109\109\111\110" then continue end if Event.Name == "\84\111\103\103\108\101\80\105\108\111\116" then continue end Event:FireServer(true) end  end  end local function k(o) if not _.flags.Itemfarm then return end if not o:IsA("\84\111\111\108") then return end local rok = o:WaitForChild("\72\97\110\100\108\101", 5) repeat task.wait() c(rok.Position) if c_:DistanceFromCharacter(rok.Position) > 10 then continue end mc.Humanoid:EquipTool(o) until not o or o.Parent ~= ro or o.Parent ~= workspace end local function r() if not _.flags.Itemfarm then return end for _, o in ipairs(ro:GetChildren()) do k(o) end for _, o in ipairs(workspace:GetChildren()) do k(o) end end  local function g() if _.flags.LairFarm then  local gro = ng:FindFirstChild("\66\111\115\115") if not gro then return end hn = gro return  end for _, Mob in ipairs(ng:GetChildren()) do  if b:GetPlayerFromCharacter(Mob) then continue end if not q(Mob) then continue end if Mob.Name ~= _.flags.Target then continue end hn = Mob return end mc.HumanoidRootPart.Anchored = false end local function n() if not _.flags.NameHide then return end mc:WaitForChild("\72\101\97\100"):WaitForChild("\72\101\97\108\116\104\71\117\105"):Destroy() end local function h() if not _.flags.LairFarm then return end for _, lsq in ipairs(gr:GetChildren()) do  if not lsq:FindFirstChild("\72\101\97\100") then continue end local ngr = lsq.Head:FindFirstChild("\83\117\98") if not ngr or not ngr:FindFirstChildWhichIsA("\84\101\120\116\66\111\120") or ngr:FindFirstChildWhichIsA("\84\101\120\116\66\111\120").Text ~= "\76\97\105\114\32\81\117\101\115\116" then continue end local hng = lsq.Head:FindFirstChild("\77\97\105\110") if not hng then continue end local fhn = hng:FindFirstChildWhichIsA("\84\101\120\116\66\111\120") if not fhn then continue end if string.lower(fhn.Text):find(string.lower(_.flags.LairTarget.."\43")) then lsq.Done:FireServer() end end end t.Heartbeat:Connect(function() if not _.flags.MobFarm then return end if not mc then return end if not q(mc) then return end if not q(hn) or hn.Name ~= _.flags.Target and hn.Name ~= "\66\111\115\115" then return g() end if q(hn) and ng:FindFirstChild("\66\111\115\115") and hn.Name ~= "\66\111\115\115" then  return g() end if _.flags.AutoQuest then l() end mc.HumanoidRootPart.CFrame =hn.HumanoidRootPart.CFrame * CFrame.new(0.2, 1.3, 6.8) i() end) t.Stepped:Connect(function()  if not _.flags.Noclip then return end for i = 1, #p do p[i].CanCollide = false end local pf = mc:FindFirstChild("\72\117\109\97\110\111\105\100\82\111\111\116\80\97\114\116") if not pf then return end if pf.RotVelocity.Magnitude >= 50 or pf.Velocity.Magnitude >= 50 then  pf.RotVelocity = Vector3.new() pf.Velocity = Vector3.new() end end) c_.CharacterAdded:Connect(function(f) mc = f a(f) n() h() r() end) a(mc) ro.ChildAdded:Connect(k) workspace.ChildAdded:Connect(k) local jpf; jpf = hookmetamethod(game, "\95\95\110\97\109\101\99\97\108\108", newcclosure(function(self, ...) local bjp = getnamecallmethod() if bjp == "\82\97\121\99\97\115\116" or bjp == "\75\105\99\107" or bjp == "\70\105\114\101\83\101\114\118\101\114" and tostring(self) == "\80\108\97\121\101\114\83\116\97\110\100\77\97\105\110\72\97\110\100\108\101" then return wait(9e9) end  return jpf(self, ...) end)) for _, Connection in pairs(getconnections(c_.Idled)) do  Connection:Disable() end for MobName, _ in pairs(tb) do if table.find(jp, MobName) then continue end jp[#jp + 1] = MobName end for _, Mob in ipairs(ng:GetChildren()) do if b:GetPlayerFromCharacter(Mob) then continue end if table.find(jp, Mob.Name) then continue end jp[#jp + 1] = Mob.Name end for _, StandObject in ipairs(game:GetService("\82\101\112\108\105\99\97\116\101\100\83\116\111\114\97\103\101").StandNameConvert:GetChildren()) do  if table.find(bj, StandObject.Name) then continue end if table.find(mc_, StandObject.Name) then continue end if string.lower(StandObject.Name):find("\111\104") or string.lower(StandObject.Name):find("\111\118\101\114\104\101\97\118\101\110")  then continue end bj[#bj + 1] = StandObject.Name end ls:AddList({text = "\77\111\98", flag = "\84\97\114\103\101\116", values = jp}) il:AddList({text = "\68\117\110\103\101\111\110", flag = "\76\97\105\114\84\97\114\103\101\116", values = {"\76\118\108\46\32\49\53", "\76\118\108\46\32\52\48", "\76\118\108\46\32\56\48", "\76\118\108\46\32\49\48\48"}}) ki:AddList({text = "\83\116\97\110\100\32\70\97\114\109", flag = "\84\97\114\103\101\116\83\116\97\110\100", values = bj}) ki:AddList({text = "\65\114\114\111\119\32\83\101\108\101\99\116\111\114\91\83\116\97\110\100\32\70\97\114\109\93", flag = "\65\114\114\111\119", values = {"\83\116\97\110\100\32\65\114\114\111\119", "\67\104\97\114\103\101\100\32\65\114\114\111\119"}}) ls:AddSlider({text = "\84\119\101\101\110\32\83\112\101\101\100", flag = "\84\119\101\101\110\83\112\101\101\100", min = 50, max = 100}) ls:AddToggle({text = "\65\117\116\111\32\70\97\114\109\32\40\77\111\98\41", flag = "\77\111\98\70\97\114\109", callback = function(j) if amc then  amc:Cancel() amc:Destroy() amc = nil end mc.HumanoidRootPart.Anchored = false end}) il:AddToggle({text = "\65\117\116\111\32\70\97\114\109\32\68\117\110\103\101\111\110\32\40\224\184\159\224\184\178\224\184\161\224\185\128\224\184\170\224\184\163\224\185\135\224\184\136\224\184\129\224\184\148\224\184\163\224\184\181\224\185\128\224\184\139\224\185\135\224\184\149\41", flag = "\77\111\98\70\97\114\109", callback = function(j) if amc then  amc:Cancel() amc:Destroy() amc = nil end mc.HumanoidRootPart.Anchored = true end}) il:AddToggle({text = "\65\117\116\111\32\74\111\105\110\101\114\32\68\117\110\103\101\111\110", flag = "\76\97\105\114\70\97\114\109", callback = h})  ls:AddToggle({text = "\73\116\101\109\32\70\97\114\109", flag = "\73\116\101\109\102\97\114\109", callback = r}) ls:AddToggle({text = "\65\117\116\111\32\81\117\101\115\116", flag = "\65\117\116\111\81\117\101\115\116"}) ls:AddToggle({text = "\65\117\116\111\32\83\116\97\110\100\32\83\107\105\108\108\115", flag = "\83\116\97\110\100\65\116\116\97\99\107"}) ls:AddToggle({text = "\78\111\32\67\108\105\112", flag = "\78\111\99\108\105\112"}) ki:AddToggle({text = "\83\116\97\110\100\32\70\97\114\109", flag = "\83\116\97\110\100\70\97\114\109", callback = function() while _.flags.StandFarm and qd.Value ~= _.flags.TargetStand and task.wait(0.2) do local tbj = c_.Backpack:FindFirstChild(_.flags.Arrow) or mc:FindFirstChild(_.flags.Arrow) local _t = c_.Backpack:FindFirstChild("\82\111\107\97\107\97\107\97") or mc:FindFirstChild("\82\111\107\97\107\97\107\97") if not tbj or not _t then continue end if qd.Value == "\78\111\110\101" then  repeat tbj.Parent = mc task.wait(0.3) tbj.Use:FireServer() until qd.Value ~= "\78\111\110\101" or not _.flags.StandFarm else repeat  _t.Parent = mc task.wait(0.3) _t.Use:FireServer() until qd.Value == "\78\111\110\101" or not _.flags.StandFarm end  end  end}) ok:AddLabel({text = "\83\99\114\105\112\116\58\32\75\105\110\103\32\111\102\32\72\117\98"}) _:Init()
